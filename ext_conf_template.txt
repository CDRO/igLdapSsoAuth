# cat=basic//1; type=user[EXT:ig_ldap_sso_auth/Classes/EM/Configuration.php:tx_igldapssoauth_emconfhelper->checkConfiguration]; label=Configuration check
checkConfiguration=0

# cat=basic//2; type=boolean; label=Throw Exception if misconfigured: Recommended for new installation - LDAP authentication is not compatible with loginSecurityLevel set to "challenged" or "superchallenged" since the real password can never be sent against the LDAP repository. Instead of failing silently, the extension will throw an Exception at login. If the method appears to be brutal it will save a lot of headaches. Value of loginSecurityLevel should be handled manually to "normal" or even better "rsa" in the Install Tool.
throwExceptionAtLogin = 1

# cat=basic//3; type=boolean; label=Force lower-case user name: If checked, user names will be always be stored in lower-cases. Useful for case-sensitive databases.
forceLowerCaseUsername = 0

# cat=basic/enable; type=boolean; label=Extract groups from membership: If checked, obtain groups from user using the membership attribute. Otherwise, gather groups object indirectly using the user's DN.
evaluateGroupsFromMembership = 0

# cat=backend/enable/1; type=boolean; label=Backend LDAP authentication: Enable LDAP authentication for the backend.
enableBELDAPAuthentication = 0

# cat=backend/enable; type=boolean; label=Backend user must exist: If checked, users that are not already present in TYPO3 may not log on.
TYPO3BEUserExist = 0

# cat=backend/enable; type=boolean; label=Enable local Backend users: If checked, Backend users found in TYPO3 may only log on if their user name does not exist in LDAP.
BEfailsafe = 0

# cat=backend/enable; type=boolean; label=Disable Backend group synchronization: If checked, TYPO3 Backend user groups will not get updated.
TYPO3BEGroupsNotSynchronize = 0

# cat=backend/enable; type=boolean; label=Keep Backend groups: Keep the Backend user groups assigned locally.
keepBEGroups = 0

# cat=frontend/enable/1; type=boolean; label=Frontend LDAP authentication: Enable LDAP authentication for the frontend.
enableFELDAPAuthentication = 0

# cat=frontend/enable; type=boolean; label=Purge Frontend users: Delete Frontend user upon login if no LDAP groups are found.
TYPO3FEDeleteUserIfNoLDAPGroups = 0

# cat=frontend/enable; type=boolean; label=Restrict new Frontend users: Do not synchronize Frontend user if the LDAP groups they are member of are not found locally.
TYPO3FEDeleteUserIfNoTYPO3Groups = 0

# cat=frontend/enable; type=boolean; label=Frontend user group must exist: If no groups are found locally, the user may not log on.
TYPO3FEGroupExist = 0

# cat=frontend/enable; type=boolean; label=Disable Frontend group synchronization: If checked, TYPO3 Frontend user groups will not get updated.
TYPO3FEGroupsNotSynchronize = 0

# cat=frontend/enable; type=boolean; label=Keep Frontend groups: Keep the Frontend user groups assigned locally.
keepFEGroups = 0

# cat=cas/enable/1; type=boolean; label=Frontend CAS authentication: If checked, enable the Single Sign On feature with a CAS server.
enableFECASAuthentication = 0

# cat=cas/enable; type=boolean; label=CAS User fetching: If checked, fetch only user information when the current session is empty else always fetch user information.
enableFetchUserIfNoSession = 0

# cat=cas/enable; type=boolean; label=Delete cookie domain: If checked, clean all cookie domain on CAS logout.
DeleteCookieLogout = 0
